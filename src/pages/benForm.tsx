/* eslint-disable react/jsx-props-no-spreading */
import Head from 'next/head';
import React, { useRef, useState } from 'react';
import { useForm } from 'react-hook-form';
import { yupResolver } from '@hookform/resolvers/yup';
import * as yup from 'yup';
import API_ENDPOINT from '../utils/constants';
import Button from '../components/Button';
import { IBeneficiary } from '../components/Beneficiary';

type Props = {};

const schema = yup.object().shape({ name: yup.string().required().min(3) });

function BenForm(props: Props) {
  const [response, setResponse] = useState<JSX.Element | string>('');

  const {
    register,
    handleSubmit,
    watch,
    formState: { errors },
  } = useForm<IBeneficiary>({ resolver: yupResolver(schema) });

  const submitData = async (ben: IBeneficiary) => {
    // e.preventDefault();
    try {
      const res = await fetch(`${API_ENDPOINT}beneficiary/`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ beneficiaryName: ben.name }),
      });
      const data = await res.json();
      setResponse(`${data.name} is added successfully`);
    } catch (error) {
      console.log(error);
    }
  };

  const nameInputRef = useRef(null);

  const submitToBackend = async (e: React.SyntheticEvent) => {
    // e.preventDefault();
    // const beneficiaryName = nameInputRef.current.value;
    // try {
    //   const res = await fetch(`${API_ENDPOINT}beneficiary/`, {
    //     method: 'POST',
    //     headers: {
    //       'Content-Type': 'application/json',
    //     },
    //     body: JSON.stringify({ beneficiaryName }),
    //   });
    //   const data = await res.json();
    //   setResponse(`${data.name} is added successfully`);
    // } catch (error) {
    //   console.log(error);
    // }
  };
  return (
    <div className="bg-cyan-300">
      <Head>
        <title>Qotoof Charity</title>
        <meta name="Charity org" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <h2>Entering Form</h2>
        <form onSubmit={handleSubmit(submitData)}>
          <label htmlFor="beneficiary">Beneficiary Name</label>
          <input
            className="border-2 border-black"
            type="text"
            id="beneficiary"
            name="name"
            {...register('name')}
          />
          <p>{errors.name?.message}</p>
          <Button text="Add Beneficiary" type="submit" />
        </form>
        <h4>{response}</h4>
      </main>
    </div>
  );
}

export default BenForm;
